service: x-sls-example

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-offline
  - serverless-lift

constructs:
  landing:
    type: single-page-app
    path: dist

custom:
  serverless-offline:
    httpPort: ${env:PORT, 4000}

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
    PLAINTEXT_VAR: ${env:PLAINTEXT_VAR, 'default-plaintext'}
    SECURE_VAR: ${env:SECURE_VAR, 'default-secure'}
    # Google Auth
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
    REDIRECT_URI: ${env:REDIRECT_URI}
    JWT_SECRET: ${env:JWT_SECRET}

functions:
  readEnv:
    handler: src/handlers.readEnv
    events:
      - http:
          path: /env
          method: get

  googleAuthInit:
    handler: src/handlers.googleAuthInit
    events:
      - http:
          path: /google-auth
          method: get

  googleAuthCallback:
    handler: src/handlers.googleAuthCallback
    timeout: 30
    events:
      - http:
          path: /google-auth/callback
          method: get

  googleAuthVerify:
    handler: src/handlers.googleAuthVerify
    events:
      - http:
          path: /google-auth/verify
          method: post
          cors: true
